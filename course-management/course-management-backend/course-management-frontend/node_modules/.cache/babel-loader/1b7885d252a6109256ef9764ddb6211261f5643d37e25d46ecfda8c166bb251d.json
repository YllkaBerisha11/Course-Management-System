{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Course-Management-System\\\\course-management\\\\course-management-backend\\\\course-management-frontend\\\\src\\\\ProfessorsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfessorsList() {\n  _s();\n  const [professors, setProfessors] = useState([]);\n\n  // Merr të dhënat nga backend-i kur komponenti ngarkohet\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/professors') // Backend URL\n    .then(response => {\n      setProfessors(response.data); // Ruaj të dhënat në state\n    }).catch(error => {\n      console.error('Error fetching professors:', error);\n    });\n  }, []); // Pjesa bosh bën që kjo funksion të ekzekutohet vetëm njëherë kur komponenti ngarkohet\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista e Profesor\\xEBve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: professors.length > 0 ? professors.map(professor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [professor.name, \" - \", professor.specialty, \" - \", professor.email]\n      }, professor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No professors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfessorsList, \"NEkREVorgfYRoai3Ne4n0OY8Qco=\");\n_c = ProfessorsList;\nexport default ProfessorsList;\nvar _c;\n$RefreshReg$(_c, \"ProfessorsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ProfessorsList","_s","professors","setProfessors","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","professor","name","specialty","email","id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Course-Management-System/course-management/course-management-backend/course-management-frontend/src/ProfessorsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ProfessorsList() {\r\n  const [professors, setProfessors] = useState([]);\r\n  \r\n  // Merr të dhënat nga backend-i kur komponenti ngarkohet\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3001/api/professors') // Backend URL\r\n      .then(response => {\r\n        setProfessors(response.data); // Ruaj të dhënat në state\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching professors:', error);\r\n      });\r\n  }, []); // Pjesa bosh bën që kjo funksion të ekzekutohet vetëm njëherë kur komponenti ngarkohet\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista e Profesorëve</h1>\r\n      <ul>\r\n        {professors.length > 0 ? (\r\n          professors.map(professor => (\r\n            <li key={professor.id}>\r\n              {professor.name} - {professor.specialty} - {professor.email}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No professors found.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfessorsList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACO,GAAG,CAAC,sCAAsC,CAAC,CAAC;IAAA,CAC/CC,IAAI,CAACC,QAAQ,IAAI;MAChBH,aAAa,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BhB,OAAA;MAAAY,QAAA,EACGT,UAAU,CAACc,MAAM,GAAG,CAAC,GACpBd,UAAU,CAACe,GAAG,CAACC,SAAS,iBACtBnB,OAAA;QAAAY,QAAA,GACGO,SAAS,CAACC,IAAI,EAAC,KAAG,EAACD,SAAS,CAACE,SAAS,EAAC,KAAG,EAACF,SAAS,CAACG,KAAK;MAAA,GADpDH,SAAS,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACL,CAAC,gBAEFhB,OAAA;QAAAY,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC3B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACd,EAAA,CA9BQD,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AAgCvB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}